<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d47d788c-d4c3-4792-812e-655e60aa184d" name="Changes" comment="Add basic Edge Functionality">
      <change afterPath="$PROJECT_DIR$/app/core/exceptions/edge/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/app/core/exceptions/edge/edgenotfoundexception.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/app/core/exceptions/project/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/app/core/exceptions/project/projectnotfoundexception.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/app/core/exceptions/vertex/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/app/core/exceptions/vertex/vertexexception.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/app/core/exceptions/vertex/vertexnotfoundexception.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/unit/core/validators/test_edgevalidator.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/unit/mappers/test_edgemapper.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/api/dto/common/propertydto.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/api/dto/common/propertydto.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/api/dto/request/edgerequestdto.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/api/dto/request/edgerequestdto.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/api/dto/request/vertexrequestdto.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/api/dto/request/vertexrequestdto.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/api/dto/response/vertexresponsedto.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/api/dto/response/vertexresponsedto.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/api/routes/edgeroute.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/api/routes/edgeroute.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/api/routes/projectroute.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/api/routes/projectroute.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/api/routes/vertexroute.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/api/routes/vertexroute.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/core/entities/graph.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/core/entities/graph.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/core/entities/vertex.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/core/entities/vertex.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/core/exceptions/__init__.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/core/exceptions/__init__.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/core/exceptions/duplicateexception.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/app/core/exceptions/edgeexception.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/core/exceptions/edge/edgeexception.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/core/exceptions/notfoundexception.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/core/exceptions/project/projectexception.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/core/repositories/edge/edgerepository.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/core/repositories/edge/edgerepository.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/core/repositories/project/projectrepository.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/core/repositories/project/projectrepository.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/core/repositories/vertex/vertexrepository.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/core/repositories/vertex/vertexrepository.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/core/validators/edgevalidator.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/core/validators/edgevalidator.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/core/validators/vertexvalidator.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/core/validators/vertexvalidator.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/infrastructure/storage/picklestorage.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/infrastructure/storage/picklestorage.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/mappers/vertexmapper.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/mappers/vertexmapper.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/unit/core/entities/test_graph.py" beforeDir="false" afterPath="$PROJECT_DIR$/tests/unit/core/entities/test_graph.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/unit/core/validators/test_vertexvalidator.py" beforeDir="false" afterPath="$PROJECT_DIR$/tests/unit/core/validators/test_vertexvalidator.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/unit/infrastructure/test_picklestorage.py" beforeDir="false" afterPath="$PROJECT_DIR$/tests/unit/infrastructure/test_picklestorage.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/unit/mappers/test_vertexmapper.py" beforeDir="false" afterPath="$PROJECT_DIR$/tests/unit/mappers/test_vertexmapper.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="FastAPI main" />
        <option value="FastAPI test_main" />
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="FormatOnSaveOptions">
    <option name="myRunOnSave" value="true" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;Graf-J&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="176e15d1-92b9-4e02-839b-c9763471b1de" />
        <option name="url" value="https://github.com/Graf-J/GeneratorService.git" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="OptimizeOnSaveOptions">
    <option name="myRunOnSave" value="true" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2cVazUOq8l4oxTf735SOJDOgbbU" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_MARK_IGNORED_FILES_AS_EXCLUDED": "true",
    "FastAPI.GeneratorService.executor": "Run",
    "Python tests.Integrationtests.executor": "Run",
    "Python tests.Python tests for test_graph.TestGraphAddVertex.executor": "Run",
    "Python tests.Python tests for test_graph.TestGraphAddVertex.test_duplicate_id_vertex.executor": "Run",
    "Python tests.Python tests for test_graph.TestGraphAddVertex.test_valid_vertex.executor": "Run",
    "Python tests.Python tests for test_graph.TestGraphFindVertexById.executor": "Run",
    "Python tests.Python tests for test_graph.TestGraphFindVertexById.test_with_invalid_id.executor": "Run",
    "Python tests.Python tests for test_graph.TestGraphFindVertexById.test_with_valid_id.executor": "Run",
    "Python tests.Python tests for test_project.TestProject.executor": "ConcurrencyExecutor",
    "Python tests.Python tests for test_project.TestProject.test_create_with_comma_in_name.executor": "Run",
    "Python tests.Python tests for test_project.TestProject.test_create_with_empty_name.executor": "Run",
    "Python tests.Python tests for test_project.TestProject.test_create_with_missing_name.executor": "Run",
    "Python tests.Python tests for test_project.TestProject.test_create_with_specialcharacter_in_name.executor": "Run",
    "Python tests.Python tests for test_project.TestProject.test_create_with_underscore_in_name.executor": "Run",
    "Python tests.Python tests for test_project.TestProject.test_delete_with_wrong_id.executor": "Run",
    "Python tests.Python tests for test_project.TestProject.test_get_with_wrong_id.executor": "Run",
    "Python tests.Python tests for test_project.TestProject.test_lifecycle.executor": "Run",
    "Python tests.Python tests for test_project.TestVertex.executor": "Run",
    "Python tests.Python tests for test_project.TestVertex.test.executor": "Run",
    "Python tests.Python tests for test_projectmapper.TestProjectMapperToDto.executor": "Run",
    "Python tests.Python tests for test_projectmapper.TestProjectMapperToDto.test.executor": "Run",
    "Python tests.Python tests for test_projectmapper.TestProjectMapperToEntity.executor": "Run",
    "Python tests.Python tests for test_vertex.TestVertex.test_get_vertices.executor": "Run",
    "Python tests.Python tests for test_vertexmapper.TestVertexMapper.executor": "Run",
    "Python tests.Python tests for test_vertexmapper.TestVertexMapperToDto.executor": "Run",
    "Python tests.Python tests for test_vertexmapper.TestVertexMapperToDto.test_without_properties.executor": "Run",
    "Python tests.Python tests for test_vertexmapper.TestVertexMapperToEntity.executor": "Run",
    "Python tests.Python tests for test_vertexvalidator.TestVertexValidator.executor": "Run",
    "Python tests.Python tests for test_vertexvalidator.TestVertexValidator.test_new_vertex_duplicate_id.executor": "Run",
    "Python tests.Python tests for test_vertexvalidator.TestVertexValidator.test_new_vertex_duplicate_name.executor": "Run",
    "Python tests.Python tests for test_vertexvalidator.TestVertexValidator.test_new_vertex_valid.executor": "Run",
    "Python tests.Python tests in entities.executor": "Run",
    "Python tests.Python tests in unit.executor": "Run",
    "Python tests.Unit-Tests.executor": "Run",
    "Python tests.Unittests for test_edgemapper.TestEdgeMapperToDto.executor": "Run",
    "Python tests.Unittests for test_edgemapper.TestEdgeMapperToDto.test_with_properties.executor": "Run",
    "Python tests.Unittests for test_edgemapper.TestEdgeMapperToDto.test_without_properties.executor": "Run",
    "Python tests.Unittests for test_edgemapper.TestEdgeMapperToEntity.executor": "Run",
    "Python tests.Unittests for test_edgemapper.TestEdgeMapperToEntity.test_with_properties.executor": "Run",
    "Python tests.Unittests for test_edgemapper.TestEdgeMapperToEntity.test_without_properties.executor": "Run",
    "Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdge.TestWithExistingOutEdge.executor": "Run",
    "Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdge.TestWithExistingOutEdge.test_something.executor": "Run",
    "Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdge.TestWithExistingOutEdgeAndNewVertex.executor": "Run",
    "Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdge.TestWithExistingOutEdgeAndNewVertex.test_in_edge_with_different_name.executor": "Run",
    "Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdge.TestWithExistingOutEdgeAndNewVertex.test_in_edge_with_same_name.executor": "Run",
    "Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdge.TestWithExistingOutEdgeAndNewVertex.test_out_edge_with_different_name.executor": "Run",
    "Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdge.TestWithExistingOutEdgeAndNewVertex.test_out_edge_with_same_name.executor": "Run",
    "Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdge.executor": "Run",
    "Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdge.test_with_existing_out_edge.executor": "Run",
    "Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithExistingInEdgeAndNewVertex.TestEdgeValidatorValidateNewEdgeWithExistingOutEdgeAndSameVertex.executor": "Run",
    "Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithExistingInEdgeAndNewVertex.executor": "Run",
    "Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithExistingInEdgeAndSameVertex.TestEdgeValidatorValidateNewEdgeWithRecursion.executor": "Run",
    "Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithExistingInEdgeAndSameVertex.TestEdgeValidatorValidateNewEdgeWithRecursion.test_recursive_edge.executor": "Run",
    "Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithExistingInEdgeAndSameVertex.executor": "Run",
    "Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithExistingInEdgeAndSameVertex.test_in_edge_with_same_name.executor": "Run",
    "Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithExistingOutEdgeAndNewVertex.executor": "Run",
    "Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithExistingOutEdgeAndSameVertex.executor": "Run",
    "Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.executor": "Run",
    "Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_one_recursive_edge_plus_edge_with_other_name_from_other_vertex.executor": "Run",
    "Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_one_recursive_edge_plus_edge_with_other_name_to_other_vertex.executor": "Run",
    "Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_one_recursive_edge_plus_edge_with_same_name_from_other_vertex.executor": "Run",
    "Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_one_recursive_edge_plus_edge_with_same_name_to_other_vertex.executor": "Run",
    "Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_recursive_edge.executor": "Run",
    "Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_two_recursive_edges_with_different_name.executor": "Run",
    "Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_two_recursive_edges_with_same_name.executor": "Run",
    "Python tests.Unittests for test_graph.TestGraphAddEdge.executor": "Run",
    "Python tests.Unittests for test_graph.TestGraphAddEdge.test_new_edge.executor": "Run",
    "Python tests.Unittests for test_graph.TestGraphAddEdge.test_new_edge_recursive.executor": "Run",
    "Python tests.Unittests for test_graph.TestGraphAddEdge.test_new_edge_with_different_name_to_new_vertex.executor": "Run",
    "Python tests.Unittests for test_graph.TestGraphAddEdge.test_new_edge_with_same_name_and_same_direction_to_new_vertex.executor": "Run",
    "Python tests.Unittests for test_graph.TestGraphAddEdge.test_new_edge_with_same_name_to_new_vertex.executor": "Run",
    "Python tests.Unittests for test_graph.TestGraphFindEdgeById.test_with_invalid_id.executor": "Run",
    "Python tests.Unittests for test_graph.TestGraphFindEdgeById.test_with_valid_id.executor": "Run",
    "Python tests.Unittests for test_picklestorage.TestPickleStorageGetProject.test_with_existing_project_id.executor": "Run",
    "Python tests.Unittests for test_picklestorage.TestPickleStorageGetProject.test_with_non_existing_project_id.executor": "Run",
    "Python tests.Unittests for test_picklestorage.TestPickleStorageGetProjects.executor": "Run",
    "Python tests.Unittests for test_picklestorage.TestPickleStorageGetProjects.test_with_no_project_files.executor": "Run",
    "Python tests.Unittests for test_picklestorage.TestPickleStorageGetProjects.test_with_project_files.executor": "Run",
    "Python tests.Unittests for test_vertex.executor": "Run",
    "Python tests.Unittests for test_vertexmapper.TestVertexMapperToDto.test_with_edges.executor": "Run",
    "Python tests.Unittests for test_vertexmapper.TestVertexMapperToDto.test_without_properties.executor": "Run",
    "Python tests.Unittests in integration.executor": "Run",
    "Python tests.Unittests in mappers.executor": "Run",
    "Python tests.Unittests in unit.executor": "Run",
    "Python tests.Unittests.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "main",
    "ignore.virus.scanning.warn.message": "true",
    "last_opened_file_path": "C:/Users/Johannes/Programming/Projekts/Studienarbeit/GeneratorService/tests/integration",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "run.code.analysis.last.selected.profile": "aDefault",
    "settings.editor.selected.configurable": "com.jetbrains.python.configuration.PyIntegratedToolsModulesConfigurable",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Johannes\Programming\Projekts\Studienarbeit\GeneratorService\app\core\exceptions\vertex" />
      <recent name="C:\Users\Johannes\Programming\Projekts\Studienarbeit\GeneratorService\app\core\exceptions\edge" />
      <recent name="C:\Users\Johannes\Programming\Projekts\Studienarbeit\GeneratorService\app\core\exceptions\project" />
      <recent name="C:\Users\Johannes\Programming\Projekts\Studienarbeit\GeneratorService\app\core\exceptions" />
      <recent name="C:\Users\Johannes\Programming\Projekts\Studienarbeit\GeneratorService" />
    </key>
  </component>
  <component name="RunManager" selected="FastAPI.GeneratorService">
    <configuration name="GeneratorService" type="Python.FastAPI">
      <option name="file" value="$PROJECT_DIR$/main.py" />
      <module name="GeneratorService" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="launchJavascriptDebuger" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="Integrationtests" type="tests" factoryName="Unittests">
      <module name="GeneratorService" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests/integration" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_pattern" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/tests/integration&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_one_recursive_edge_plus_edge_with_other_name_from_other_vertex" type="tests" factoryName="Unittests" temporary="true" nameIsGenerated="true">
      <module name="GeneratorService" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests/unit/core/validators" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_one_recursive_edge_plus_edge_with_other_name_from_other_vertex&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_one_recursive_edge_plus_edge_with_other_name_to_other_vertex" type="tests" factoryName="Unittests" temporary="true" nameIsGenerated="true">
      <module name="GeneratorService" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests/unit/core/validators" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_one_recursive_edge_plus_edge_with_other_name_to_other_vertex&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_one_recursive_edge_plus_edge_with_same_name_from_other_vertex" type="tests" factoryName="Unittests" temporary="true" nameIsGenerated="true">
      <module name="GeneratorService" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests/unit/core/validators" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_one_recursive_edge_plus_edge_with_same_name_from_other_vertex&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Unittests for test_vertexmapper.TestVertexMapperToDto.test_with_edges" type="tests" factoryName="Unittests" temporary="true" nameIsGenerated="true">
      <module name="GeneratorService" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests/unit/mappers" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_vertexmapper.TestVertexMapperToDto.test_with_edges&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Unittests for test_vertexmapper.TestVertexMapperToDto.test_without_properties" type="tests" factoryName="Unittests" temporary="true" nameIsGenerated="true">
      <module name="GeneratorService" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests/unit/mappers" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_vertexmapper.TestVertexMapperToDto.test_without_properties&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Unittests" type="tests" factoryName="Unittests">
      <module name="GeneratorService" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests/unit" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_pattern" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/tests/unit&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="FastAPI.GeneratorService" />
      <item itemvalue="Python tests.Unittests" />
      <item itemvalue="Python tests.Integrationtests" />
      <item itemvalue="Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_one_recursive_edge_plus_edge_with_other_name_from_other_vertex" />
      <item itemvalue="Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_one_recursive_edge_plus_edge_with_other_name_to_other_vertex" />
      <item itemvalue="Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_one_recursive_edge_plus_edge_with_same_name_from_other_vertex" />
      <item itemvalue="Python tests.Unittests for test_vertexmapper.TestVertexMapperToDto.test_with_edges" />
      <item itemvalue="Python tests.Unittests for test_vertexmapper.TestVertexMapperToDto.test_without_properties" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.Unittests for test_vertexmapper.TestVertexMapperToDto.test_with_edges" />
        <item itemvalue="Python tests.Unittests for test_vertexmapper.TestVertexMapperToDto.test_without_properties" />
        <item itemvalue="Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_one_recursive_edge_plus_edge_with_other_name_from_other_vertex" />
        <item itemvalue="Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_one_recursive_edge_plus_edge_with_same_name_from_other_vertex" />
        <item itemvalue="Python tests.Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_one_recursive_edge_plus_edge_with_other_name_to_other_vertex" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-python-sdk-5a2391486177-2887949eec09-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-233.13763.11" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="d47d788c-d4c3-4792-812e-655e60aa184d" name="Changes" comment="" />
      <created>1708199463389</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1708199463389</updated>
      <workItem from="1708199470497" duration="310000" />
      <workItem from="1708199794837" duration="21054000" />
      <workItem from="1708257413042" duration="34296000" />
      <workItem from="1708369907731" duration="17098000" />
      <workItem from="1708442683628" duration="20980000" />
    </task>
    <task id="LOCAL-00001" summary="Initial Commit">
      <option name="closed" value="true" />
      <created>1708200211276</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1708200211276</updated>
    </task>
    <task id="LOCAL-00002" summary="Add Project Functionality">
      <option name="closed" value="true" />
      <created>1708292201618</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1708292201618</updated>
    </task>
    <task id="LOCAL-00003" summary="Add basic Edge Functionality">
      <option name="closed" value="true" />
      <created>1708385860059</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1708385860060</updated>
    </task>
    <option name="localTasksCounter" value="4" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="main" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Initial Commit" />
    <MESSAGE value="Add Project Functionality" />
    <MESSAGE value="Add basic Edge Functionality" />
    <option name="LAST_COMMIT_MESSAGE" value="Add basic Edge Functionality" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/app/core/services/edge/edgeservice.py</url>
          <line>22</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/app/api/routes/vertexroute.py</url>
          <line>22</line>
          <option name="timeStamp" value="8" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgevalidator_TestEdgeValidatorValidateNewEdgeWithExistingOutEdgeAndSameVertex.coverage" NAME="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithExistingOutEdgeAndSameVertex Coverage Results" MODIFIED="1708455609776" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/validators" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_in_mappers.coverage" NAME="Unittests Coverage Results" MODIFIED="1708299137316" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgemapper_TestEdgeMapperToDto_test_with_properties.coverage" NAME="Unittests for test_edgemapper.TestEdgeMapperToDto.test_with_properties Coverage Results" MODIFIED="1708387545769" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/mappers" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgemapper_TestEdgeMapperToEntity.coverage" NAME="Unittests for test_edgemapper.TestEdgeMapperToEntity Coverage Results" MODIFIED="1708386805625" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/mappers" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_vertex.coverage" NAME="Unittests for test_vertex Coverage Results" MODIFIED="1708206885486" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/integration" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests.coverage" NAME="Unittests Coverage Results" MODIFIED="1708478435255" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgemapper_TestEdgeMapperToEntity_test_without_properties.coverage" NAME="Unittests for test_edgemapper.TestEdgeMapperToEntity.test_without_properties Coverage Results" MODIFIED="1708386801758" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/mappers" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgemapper_TestEdgeMapperToEntity_test_with_properties.coverage" NAME="Unittests for test_edgemapper.TestEdgeMapperToEntity.test_with_properties Coverage Results" MODIFIED="1708386701943" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/mappers" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgevalidator_TestEdgeValidatorValidateNewEdgeWithExistingInEdgeAndSameVertex.coverage" NAME="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithExistingInEdgeAndSameVertex Coverage Results" MODIFIED="1708455629517" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/validators" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgevalidator_TestEdgeValidatorValidateNewEdge.coverage" NAME="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdge Coverage Results" MODIFIED="1708453683110" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/validators" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgevalidator_TestEdgeValidatorValidateNewEdge_TestWithExistingOutEdge_test_something.coverage" NAME="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdge.TestWithExistingOutEdge.test_something Coverage Results" MODIFIED="1708452077279" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/validators" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_picklestorage_TestPickleStorageGetProject_test_with_non_existing_project_id.coverage" NAME="Unittests for test_picklestorage.TestPickleStorageGetProject.test_with_non_existing_project_id Coverage Results" MODIFIED="1708371447970" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/infrastructure" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgevalidator_TestEdgeValidatorValidateNewEdgeWithExistingInEdgeAndSameVertex_TestEdgeValidatorValidateNewEdgeWithRecursion_test_recursive_edge.coverage" NAME="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithExistingInEdgeAndSameVertex.TestEdgeValidatorValidateNewEdgeWithRecursion.test_recursive_edge Coverage Results" MODIFIED="1708456382266" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/validators" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_graph_TestGraphFindEdgeById_test_with_valid_id.coverage" NAME="Unittests for test_graph.TestGraphFindEdgeById.test_with_valid_id Coverage Results" MODIFIED="1708443177951" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/entities" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_graph_TestGraphAddEdge_test_new_edge_with_same_name_and_same_direction_to_new_vertex.coverage" NAME="Unittests for test_graph.TestGraphAddEdge.test_new_edge_with_same_name_and_same_direction_to_new_vertex Coverage Results" MODIFIED="1708446854492" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/entities" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_graph_TestGraphAddEdge.coverage" NAME="Unittests for test_graph.TestGraphAddEdge Coverage Results" MODIFIED="1708456171911" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/entities" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_graph_TestGraphAddEdge_test_new_edge_recursive.coverage" NAME="Unittests for test_graph.TestGraphAddEdge.test_new_edge_recursive Coverage Results" MODIFIED="1708456166142" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/entities" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_vertexmapper_TestVertexMapperToDto_test_without_properties.coverage" NAME="Unittests for test_vertexmapper.TestVertexMapperToDto.test_without_properties Coverage Results" MODIFIED="1708476932179" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/mappers" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgevalidator_TestEdgeValidatorValidateNewEdgeWithExistingInEdgeAndSameVertex_test_in_edge_with_same_name.coverage" NAME="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithExistingInEdgeAndSameVertex.test_in_edge_with_same_name Coverage Results" MODIFIED="1708455525334" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/validators" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgevalidator_TestEdgeValidatorValidateNewEdge_TestWithExistingOutEdgeAndNewVertex.coverage" NAME="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdge.TestWithExistingOutEdgeAndNewVertex Coverage Results" MODIFIED="1708453910682" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/validators" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_picklestorage_TestPickleStorageGetProjects_test_with_no_project_files.coverage" NAME="Unittests for test_picklestorage.TestPickleStorageGetProjects.test_with_no_project_files Coverage Results" MODIFIED="1708370892191" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/infrastructure" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_graph_TestGraphFindEdgeById_test_with_invalid_id.coverage" NAME="Unittests for test_graph.TestGraphFindEdgeById.test_with_invalid_id Coverage Results" MODIFIED="1708443265700" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/entities" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgevalidator_TestEdgeValidatorValidateNewEdgeWithExistingOutEdgeAndNewVertex.coverage" NAME="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithExistingOutEdgeAndNewVertex Coverage Results" MODIFIED="1708456440293" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/validators" />
    <SUITE FILE_PATH="coverage/GeneratorService$.coverage" NAME=" Coverage Results" MODIFIED="1708298738802" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/entities" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgevalidator_TestEdgeValidatorValidateNewEdge_test_with_existing_out_edge.coverage" NAME="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdge.test_with_existing_out_edge Coverage Results" MODIFIED="1708452232473" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/validators" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgevalidator_TestEdgeValidatorValidateNewEdgeWithRecursion_test_two_recursive_edges_with_different_name.coverage" NAME="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_two_recursive_edges_with_different_name Coverage Results" MODIFIED="1708470167402" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/validators" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgevalidator_TestEdgeValidatorValidateNewEdge_TestWithExistingOutEdgeAndNewVertex_test_out_edge_with_same_name.coverage" NAME="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdge.TestWithExistingOutEdgeAndNewVertex.test_out_edge_with_same_name Coverage Results" MODIFIED="1708453747365" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/validators" />
    <SUITE FILE_PATH="coverage/GeneratorService$Integrationtests.coverage" NAME="Integrationtests Coverage Results" MODIFIED="1708479389700" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/integration" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgevalidator_TestEdgeValidatorValidateNewEdge_TestWithExistingOutEdgeAndNewVertex_test_in_edge_with_different_name.coverage" NAME="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdge.TestWithExistingOutEdgeAndNewVertex.test_in_edge_with_different_name Coverage Results" MODIFIED="1708453896149" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/validators" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgevalidator_TestEdgeValidatorValidateNewEdge_TestWithExistingOutEdgeAndNewVertex_test_in_edge_with_same_name.coverage" NAME="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdge.TestWithExistingOutEdgeAndNewVertex.test_in_edge_with_same_name Coverage Results" MODIFIED="1708453764525" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/validators" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgemapper_TestEdgeMapperToDto_test_without_properties.coverage" NAME="Unittests for test_edgemapper.TestEdgeMapperToDto.test_without_properties Coverage Results" MODIFIED="1708387573095" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/mappers" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgevalidator_TestEdgeValidatorValidateNewEdgeWithRecursion_test_recursive_edge.coverage" NAME="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_recursive_edge Coverage Results" MODIFIED="1708456513712" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/validators" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgevalidator_TestEdgeValidatorValidateNewEdgeWithRecursion_test_two_recursive_edges_with_same_name.coverage" NAME="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_two_recursive_edges_with_same_name Coverage Results" MODIFIED="1708456754089" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/validators" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgevalidator_TestEdgeValidatorValidateNewEdgeWithRecursion_test_one_recursive_edge_plus_edge_with_same_name_from_other_vertex.coverage" NAME="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_one_recursive_edge_plus_edge_with_same_name_from_other_vertex Coverage Results" MODIFIED="1708470312916" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/validators" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgevalidator_TestEdgeValidatorValidateNewEdge_TestWithExistingOutEdge.coverage" NAME="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdge.TestWithExistingOutEdge Coverage Results" MODIFIED="1708452520268" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/validators" />
    <SUITE FILE_PATH="coverage/GeneratorService$GeneratorService.coverage" NAME="GeneratorService Coverage Results" MODIFIED="1708480464346" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_in_integration.coverage" NAME="Integrationtests Coverage Results" MODIFIED="1708299142857" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/integration" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_picklestorage_TestPickleStorageGetProjects_test_with_project_files.coverage" NAME="Unittests for test_picklestorage.TestPickleStorageGetProjects.test_with_project_files Coverage Results" MODIFIED="1708371134382" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/infrastructure" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgevalidator_TestEdgeValidatorValidateNewEdge_TestWithExistingOutEdgeAndNewVertex_test_out_edge_with_different_name.coverage" NAME="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdge.TestWithExistingOutEdgeAndNewVertex.test_out_edge_with_different_name Coverage Results" MODIFIED="1708453754997" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/validators" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_picklestorage_TestPickleStorageGetProjects.coverage" NAME="Unittests for test_picklestorage.TestPickleStorageGetProjects Coverage Results" MODIFIED="1708371138684" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/infrastructure" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgevalidator_TestEdgeValidatorValidateNewEdgeWithRecursion_test_one_recursive_edge_plus_edge_with_other_name_to_other_vertex.coverage" NAME="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_one_recursive_edge_plus_edge_with_other_name_to_other_vertex Coverage Results" MODIFIED="1708470263369" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/validators" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgevalidator_TestEdgeValidatorValidateNewEdgeWithExistingInEdgeAndSameVertex_TestEdgeValidatorValidateNewEdgeWithRecursion.coverage" NAME="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithExistingInEdgeAndSameVertex.TestEdgeValidatorValidateNewEdgeWithRecursion Coverage Results" MODIFIED="1708456430214" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/validators" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgevalidator_TestEdgeValidatorValidateNewEdgeWithRecursion_test_one_recursive_edge_plus_edge_with_same_name_to_other_vertex.coverage" NAME="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_one_recursive_edge_plus_edge_with_same_name_to_other_vertex Coverage Results" MODIFIED="1708470170702" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/validators" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgemapper_TestEdgeMapperToDto.coverage" NAME="Unittests for test_edgemapper.TestEdgeMapperToDto Coverage Results" MODIFIED="1708387224262" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/mappers" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_graph_TestGraphAddEdge_test_new_edge_with_different_name_to_new_vertex.coverage" NAME="Unittests for test_graph.TestGraphAddEdge.test_new_edge_with_different_name_to_new_vertex Coverage Results" MODIFIED="1708444505817" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/entities" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_vertexmapper_TestVertexMapperToDto_test_with_edges.coverage" NAME="Unittests for test_vertexmapper.TestVertexMapperToDto.test_with_edges Coverage Results" MODIFIED="1708477194570" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/mappers" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_graph_TestGraphAddEdge_test_new_edge.coverage" NAME="Unittests for test_graph.TestGraphAddEdge.test_new_edge Coverage Results" MODIFIED="1708450741856" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/entities" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgevalidator_TestEdgeValidatorValidateNewEdgeWithExistingInEdgeAndNewVertex.coverage" NAME="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithExistingInEdgeAndNewVertex Coverage Results" MODIFIED="1708455597882" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/validators" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgevalidator_TestEdgeValidatorValidateNewEdgeWithExistingInEdgeAndNewVertex_TestEdgeValidatorValidateNewEdgeWithExistingOutEdgeAndSameVertex.coverage" NAME="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithExistingInEdgeAndNewVertex.TestEdgeValidatorValidateNewEdgeWithExistingOutEdgeAndSameVertex Coverage Results" MODIFIED="1708455162401" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/validators" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgevalidator_TestEdgeValidatorValidateNewEdgeWithRecursion.coverage" NAME="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion Coverage Results" MODIFIED="1708456499228" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/validators" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_edgevalidator_TestEdgeValidatorValidateNewEdgeWithRecursion_test_one_recursive_edge_plus_edge_with_other_name_from_other_vertex.coverage" NAME="Unittests for test_edgevalidator.TestEdgeValidatorValidateNewEdgeWithRecursion.test_one_recursive_edge_plus_edge_with_other_name_from_other_vertex Coverage Results" MODIFIED="1708470338859" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/validators" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_graph_TestGraphAddEdge_test_new_edge_with_same_name_to_new_vertex.coverage" NAME="Unittests for test_graph.TestGraphAddEdge.test_new_edge_with_same_name_to_new_vertex Coverage Results" MODIFIED="1708444674702" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit/core/entities" />
    <SUITE FILE_PATH="coverage/GeneratorService$Unittests_for_test_picklestorage_TestPickleStorageGetProject_test_with_existing_project_id.coverage" NAME="Unittests Coverage Results" MODIFIED="1708387577803" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/unit" />
  </component>
</project>